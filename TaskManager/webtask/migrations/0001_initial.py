# Generated by Django 4.1.4 on 2022-12-11 23:36

import TaskManager.webtask.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Machine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('internal_id', models.IntegerField(unique=True)),
                ('brand', models.CharField(max_length=30)),
                ('model', models.CharField(max_length=30)),
                ('license', models.CharField(max_length=30)),
                ('price_for_day', models.FloatField(validators=[django.core.validators.MinValueValidator(1)])),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Personnel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('internal_id', models.IntegerField(unique=True)),
                ('name', models.CharField(max_length=30)),
                ('family', models.CharField(max_length=30)),
                ('position', models.CharField(max_length=30)),
                ('price_for_day', models.FloatField(validators=[django.core.validators.MinValueValidator(1)])),
                ('location', models.CharField(blank=True, max_length=150, null=True)),
                ('profile_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('start_date', models.DateField()),
                ('status', models.CharField(choices=[('created', 'created'), ('in_progress', 'in progress'), ('frozen', 'frozen'), ('closed', 'closed')], default='created', max_length=25)),
                ('requirement', models.TextField(validators=[TaskManager.webtask.models.min_requirement_chars])),
                ('description', models.TextField(blank=True, null=True)),
                ('personnel_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webtask.personnel', verbose_name='Manager')),
                ('profile_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='created by')),
            ],
        ),
        migrations.CreateModel(
            name='Step',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('requirement', models.TextField(validators=[TaskManager.webtask.models.min_requirement_chars])),
                ('implementation', models.TextField(blank=True, null=True)),
                ('lead_time_in_days', models.PositiveIntegerField()),
                ('status', models.CharField(choices=[('created', 'created'), ('in_progress', 'in progress'), ('returned', 'returned'), ('frozen', 'frozen'), ('closed', 'closed')], default='created', max_length=25)),
                ('step_priority', models.PositiveIntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=150, null=True)),
                ('machine_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='webtask.machine')),
                ('personnel_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webtask.personnel', verbose_name='Executor')),
                ('task_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webtask.task')),
            ],
        ),
    ]
